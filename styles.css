/* CSS variables */
:root {
    --lightGreyBackground: rgb(228, 235, 245);
    --lightGreyBorderColor1: rgb(200, 208, 231);
    --white: rgb(255, 255, 255);
    --placeholderColor: rgb(190, 201, 227);
    --inputColor: rgb(92, 101, 122);
    --featuresColor: rgb(161, 172, 198);
    --baseColor: rgb(109, 93, 252);
    --baseColorDark: rgb(91, 14, 235);
    --selectedColor: rgb(4, 46, 152);
    --completeAllHover: rgb(104, 201, 136);
    --clearCompletedHover: rgb(201, 104, 104);
}

/* Some reasonable resets and changes to deafult css*/
html {
    -webkit-box-sizing: border-box;
    box-sizing: border-box;
    height: 100%;
    background: var(--lightGreyBackground);
}

*,
*::before,
*::after {
    -webkit-box-sizing: inherit;
    box-sizing: inherit;
    margin: 0;
    padding: 0;

    /* Setting the font family for all elements */
    font-family: sans-serif;
}

/* Removing default list styles */
li {
    list-style: none;
}

/* Removing default button styles and adding responsive padding */
button {
    border: none;
    background: transparent;
    padding: 0.4em 0.8em;
}


/* Custom hr tag style according to the theme of the project */
hr {
    display: block;
    height: 2px;
    border: 0;

    border-top: 2px solid var(--lightGreyBorderColor1);
    padding: 0;
}

/* Utilities */

/* Making custom small font styles for buttons and text */
.smallFontStyles {
    font-size: 0.8rem;
    color: var(--featuresColor);
}

/* Styles for selected task statistic option */
.selected {
    font-size: 0.85rem;
    color: var(--selectedColor);
}

/* Styles for the tasks which are marked completed  */
.completed {
    color: var(--placeholderColor);
    text-decoration: line-through;
}


/* Body styles to adequately position the appContainer */
body {

    display: -webkit-box;

    display: -ms-flexbox;

    display: flex;
    -webkit-box-align: start;
    -ms-flex-align: start;
    align-items: flex-start;
    -webkit-box-pack: center;
    -ms-flex-pack: center;
    justify-content: center;

    /* Padding will not go below 20px for small screen sizes */
    padding: max(2vw, 20px) 0;
}

/* appContainer styles */
.appContainer {
    /* Making responsive width */
    min-width: min(500px, 90vw);
    width: 60vw;
    max-width: 800px;

    padding: 2rem 2rem 0.1px 2rem;
    border-radius: 16px;

    -webkit-box-shadow: 0.8rem 0.8rem 1.4rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 1.8rem var(--white);
    box-shadow: 0.8rem 0.8rem 1.4rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 1.8rem var(--white);
}

/* Input field styles */

/* Styles for container of the input */
.inputField {
    -webkit-box-shadow: inset 0.2rem 0.2rem 0.5rem var(--lightGreyBorderColor1), inset -0.2rem -0.2rem 0.5rem var(--white);
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--lightGreyBorderColor1), inset -0.2rem -0.2rem 0.5rem var(--white);

    border-radius: 8px;
    height: 4rem;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;
}

/* Styles to reset the default focused input styles as the parent container will have styles instead */
.inputField__input:focus {
    outline: none;
    border: none;
    -webkit-box-shadow: none;
    box-shadow: none;
}


/* Styling the parent container of input when it is focused */
.inputField:has(>.inputField__input:focus) {
    -webkit-box-shadow: 0.3rem 0.3rem 0.6rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 0.5rem var(--white);
    box-shadow: 0.3rem 0.3rem 0.6rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 0.5rem var(--white);
}

/* Input box styles */
.inputField__input {
    background-color: transparent;
    width: 90%;
    border: none;
    height: 100%;
    line-height: 1.6rem;
    font-size: 1.6rem;
    color: var(--inputColor);
}


/* Input placeholder styles */
.inputField__input::-webkit-input-placeholder {
    color: var(--placeholderColor);
}

.inputField__input::-moz-placeholder {
    color: var(--placeholderColor);
}

.inputField__input:-ms-input-placeholder {
    color: var(--placeholderColor);
}

.inputField__input::-ms-input-placeholder {
    color: var(--placeholderColor);
}

.inputField__input::placeholder {
    color: var(--placeholderColor);
}

/* Common CSS for input placeholder image and add button */
.inputField img {
    height: 40%;
    margin: 0 16px;

    -webkit-filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
    filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
}


/* hover and active effects on input add button */
.inputField__add {
    -webkit-transition: all 200ms ease-in-out;
    -o-transition: all 200ms ease-in-out;
    transition: all 200ms ease-in-out;
}

.inputField__add:hover {
    -webkit-transform: scale(1.14);
    -ms-transform: scale(1.14);
    transform: scale(1.14);
    cursor: pointer;
}

.inputField__add:active {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
}

/* Task options styles*/
.taskOptions {
    margin: 14px 0;
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;
}

/* Common css for taskOptions buttons */
.taskOptions button {
    padding: 0;
    text-align: center;
}

.taskOptions button:hover {
    cursor: pointer;
}

/* complete All Tasks button styles */
.taskOptions__completeAllTasks {
    -webkit-transition: all 200ms ease-in-out;
    -o-transition: all 200ms ease-in-out;
    transition: all 200ms ease-in-out;
}

/* Hover state of complete all tasks button */
.taskOptions__completeAllTasks:hover {
    -webkit-transform: scale(1.12);
    -ms-transform: scale(1.12);
    transform: scale(1.12);
    color: var(--completeAllHover);
}

/* Active state of complete all tasks button */
.taskOptions__completeAllTasks:active {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
}


/* clear completed tasks styles */
.taskOptions__clearCompletedTasks {
    -webkit-transition: all 200ms ease-in-out;
    -o-transition: all 200ms ease-in-out;
    transition: all 200ms ease-in-out;
}

/* Hover state of clear completed tasks button */
.taskOptions__clearCompletedTasks:hover {
    -webkit-transform: scale(1.12);
    -ms-transform: scale(1.12);
    transform: scale(1.12);
    color: var(--clearCompletedHover);
}

/* Active state of clear completed tasks button */
.taskOptions__clearCompletedTasks:active {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
}

/* Added styles for the icon in conplete all tasks button separately */
.taskOptions__completeAllTasks img {
    height: 0.68rem;
    margin: 0 14px;

    -webkit-filter: invert(67%) sepia(0%) saturate(43%) hue-rotate(138deg) brightness(101%) contrast(89%);
    filter: invert(67%) sepia(0%) saturate(43%) hue-rotate(138deg) brightness(101%) contrast(89%);

    -webkit-transition: height 300ms ease-in-out, -webkit-filter 300ms ease-in-out;
    transition: height 300ms ease-in-out, -webkit-filter 300ms ease-in-out;
    -o-transition: height 300ms ease-in-out, filter 300ms ease-in-out;
    transition: height 300ms ease-in-out, filter 300ms ease-in-out;
    transition: height 300ms ease-in-out, filter 300ms ease-in-out, -webkit-filter 300ms ease-in-out;
}

.taskOptions__completeAllTasks:hover img {
    -webkit-filter: invert(51%) sepia(50%) saturate(7490%) hue-rotate(98deg) brightness(103%) contrast(65%);
    filter: invert(51%) sepia(50%) saturate(7490%) hue-rotate(98deg) brightness(103%) contrast(65%);

    height: 0.7rem;
    margin: 0 14px;
}


/* Task List styles */
.taskListContainer {
    margin: 1.2rem 0;
}

/* Styles for the list of tasks */
.taskList {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
    -ms-flex-direction: column;
    flex-direction: column;

    -webkit-box-pack: justify;
    -ms-flex-pack: justify;
    justify-content: space-between;

    gap: max(10px, 0.4em);
}

/* Style for each task as a list item */
.taskList li {
    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;

    -webkit-box-align: center;
    -ms-flex-align: center;
    align-items: center;

    gap: max(10px, 0.4em);
    font-size: 1.4rem;
    border-radius: 8px;
    padding: 0.6em 0.6em;

    -webkit-box-shadow: 0.2rem 0.2rem 0.3rem var(--lightGreyBorderColor1), -0.1rem -0.1rem 0.2rem var(--white);
    box-shadow: 0.2rem 0.2rem 0.3rem var(--lightGreyBorderColor1), -0.1rem -0.1rem 0.2rem var(--white);
}

/* Removing box shadown of task when it's completed */
.taskList li:has(> .completed) {
    -webkit-box-shadow: none;
    box-shadow: none;
}

/* Task checkbox styles */
.taskList li input[type="checkbox"] {
    /* Removing default appearance */
    -webkit-appearance: none;
    -moz-appearance: none;
    appearance: none;

    /* Setting dimensions */
    min-width: 1.4rem;
    min-height: 1.4rem;

    -webkit-box-shadow: inset 0.1rem 0.1rem 0.1rem var(--lightGreyBorderColor1), inset -0.1rem -0.1rem 0.1rem var(--white);
    box-shadow: inset 0.1rem 0.1rem 0.1rem var(--lightGreyBorderColor1), inset -0.1rem -0.1rem 0.1rem var(--white);
    border-radius: 6px;

    display: -ms-grid;
    display: grid;
    place-content: center;
}

/* Styles for the tick mark inside checkbox */
.taskList li input[type="checkbox"]::before {
    content: "";
    height: 0.8rem;
    width: 0.8rem;

    -webkit-clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);

    -webkit-transform: scale(0);
    -ms-transform: scale(0);
    transform: scale(0);

    -webkit-transition: -webkit-transform 110ms ease-in-out;
    transition: -webkit-transform 110ms ease-in-out;
    -o-transition: transform 110ms ease-in-out;
    transition: transform 110ms ease-in-out;
    transition: transform 110ms ease-in-out, -webkit-transform 110ms ease-in-out;

    background-color: var(--baseColor);
}

/* Styles for the tick mark inside checkbox in checked state*/
.taskList li input[type="checkbox"]:checked::before {
    -webkit-transform: scale(1);
    -ms-transform: scale(1);
    transform: scale(1);
}

/* Styles for the delete button */
.taskList li img {
    height: 1.4rem;
    margin-left: auto;
    visibility: hidden;

    -webkit-filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
    filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
}

/* Making delete button visible only on hover */
.taskList li:hover img {
    visibility: visible;
    cursor: pointer;
}

/* Task Stat styles */
.taskStats {
    margin: 10px 0;

    display: -webkit-box;
    display: -ms-flexbox;
    display: flex;

    -webkit-box-orient: horizontal;
    -webkit-box-direction: normal;
    -ms-flex-direction: row;
    flex-direction: row;
}

/* For pushing the buttons to the right side */
.taskStats #taskStats__all {
    margin-left: auto;
}

/* Simple scale change transition for taskStat buttons */
.taskStats > .smallFontStyles {
    -webkit-transition: all 180ms ease-in-out;
    -o-transition: all 180ms ease-in-out;
    transition: all 180ms ease-in-out;
}

@media (max-width: 600px){
    /* Adjusting appContainer dimensions */
    .appContainer {
        padding: 1rem 1rem 0.1px 1rem;
        border-radius: 8px;
    }

    /* Adjusting inputField dimensions */
    .inputField {
        height: 3rem;
        border-radius: 4px;
    }

    .inputField__input {
        line-height: 1.4rem;
        font-size: 1.4rem;
    }

    /* Adjusting list item (task) dimensions */
    .taskList li {
        font-size: 1.2rem;
        border-radius: 4px;
    }

    /* Adjusting checkbox dimensions */
    .taskList li input[type="checkbox"] {

        border-radius: 4px;
        
        min-width: 1rem;
        min-height: 1rem;
    }
}