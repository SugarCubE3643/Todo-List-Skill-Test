/* CSS variables */
:root{
    --lightGreyBackground: rgb(228, 235, 245);
    --lightGreyBorderColor1:rgb(200, 208, 231);
    --white:rgb(255, 255, 255);
    --placeholderColor:rgb(190, 201, 227);
    --inputColor:rgb(92, 101, 122);
    --featuresColor:rgb(161, 172, 198);
    --baseColor:rgb(109, 93, 252);
    --baseColorDark:rgb(91, 14, 235);
    --selectedColor:rgb(4, 46, 152);
    --completeAllHover:rgb(104, 201, 136);
}

/* Some reasonable resets and changes to deafult css*/
html{
    box-sizing: border-box;
    height: 100%;
    background: var(--lightGreyBackground);
}

*,
*::before,
*::after{
    box-sizing: inherit;
    margin: 0;
    padding: 0;

    /* Setting the font family for all elements */
    font-family: sans-serif;
}

/* Removing default list styles */
li {
    list-style: none;
}

/* Removing default button styles and adding responsive padding */
button{
    border: none;
    background: transparent;
    padding: 0.4em 0.8em;
}


/* Custom hr tag style according to the theme of the project */
hr{ 
    display: block; 
    height: 2px;
    border: 0; 
    
    border-top: 2px solid var(--lightGreyBorderColor1);
    padding: 0; 
}

/* Utilities */

/* Making custom small font styles for buttons and text */
.smallFontStyles{
    font-size: 0.8rem;
    color: var(--featuresColor);
}

/* Styles for selected task statistic option */
.selected{
    font-size: 0.85rem;
    color: var(--selectedColor);
}

/* Styles for the tasks which are marked completed  */
.completed{
    color: var(--placeholderColor);
    text-decoration: line-through;
}


/* Body styles to adequately position the appContainer */
body{

    display: flex;
    align-items: flex-start;
    justify-content: center;

    /* Padding will not go below 20px for small screen sizes */
    padding: max(2vw, 20px) 0;
}

/* appContainer styles */
.appContainer{
    /* Making responsive width */
    min-width: min(500px, 90vw);
    width: 60vw;
    max-width: 800px;

    padding: 2rem 2rem 0.1px 2rem;
    border-radius: 16px;

    box-shadow: 0.8rem 0.8rem 1.4rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 1.8rem var(--white);
}

/* Input field styles */

/* Styles for container of the input */
.inputField{
    box-shadow: inset 0.2rem 0.2rem 0.5rem var(--lightGreyBorderColor1), inset -0.2rem -0.2rem 0.5rem var(--white);

    border-radius: 8px;
    height: min(4rem, 10vw);
    display: flex;
    flex-direction: row;
    align-items: center;
}

/* Styles to reset the default focused input styles as the parent container will have styles instead */
.inputField__input:focus{
    outline: none;
    border: none;
    box-shadow: none;
}


/* Styling the parent container of input when it is focused */
.inputField:has(>.inputField__input:focus){
    box-shadow: 0.3rem 0.3rem 0.6rem var(--lightGreyBorderColor1), -0.2rem -0.2rem 0.5rem var(--white);
}

/* Input box styles */
.inputField__input{
    background-color: transparent;
    width:90%;
    border:none;
    height: 100%;
    line-height: min(4rem, 10vw);
    font-size: min(1.6rem, 4vw);
    color: var(--inputColor);
}


/* Input placeholder styles */
.inputField__input::placeholder{
    color: var(--placeholderColor);
}

/* Input placeholder image and add button */
.inputField img {
    height: 40%;
    margin: 0 16px;

    filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
}

.inputField__add{
    transition: all 200ms ease-in-out;
}

.inputField__add:hover{
    transform: scale(1.14);
    cursor: pointer;
}

.inputField__add:active{
    transform: scale(1);
}

/* Task options  */
.taskOptions{
    margin:14px 0;
    display: flex;
    flex-direction: row;
    justify-content: space-between;
}

.taskOptions button{
    padding: 0;
    text-align: center;
}

.taskOptions button:hover{
    cursor: pointer;
}

/* complete All Tasks button styles */
.taskOptions__completeAllTasks{
    transition: all 200ms ease-in-out;
}

/* Hover state of complete all tasks button */
.taskOptions__completeAllTasks:hover{
    transform: scale(1.12);
    color: var(--completeAllHover);
}

/* Active state of complete all tasks button */
.taskOptions__completeAllTasks:active{
    transform: scale(1);
}

.taskOptions__completeAllTasks img{
    filter: invert(67%) sepia(0%) saturate(43%) hue-rotate(138deg) brightness(101%) contrast(89%);
    height:0.68rem;
    margin:0 14px;
    transition: height 300ms ease-in-out, filter 300ms ease-in-out;
}

.taskOptions__completeAllTasks:hover img{
    filter: invert(51%) sepia(50%) saturate(7490%) hue-rotate(98deg) brightness(103%) contrast(65%);
    height:0.7rem;
    margin:0 14px;
}


/* Task List styles */
.taskListContainer{
    margin: 1.2rem 0;
}
.taskList{
    display: flex;
    flex-direction: column;
    justify-content: space-between;
    gap:max(10px, 0.4em);
}

.taskList li{
    display: flex;
    flex-direction: row;
    align-items: center;
    gap: max(10px, 0.4em);
    height: min(3rem,7.5vw);
    font-size: min(1.4rem,3.5vw);

    border-radius: 8px;
    padding: 0.2em 0.4em;
    box-shadow: 0.2rem 0.2rem 0.3rem var(--lightGreyBorderColor1), -0.1rem -0.1rem 0.2rem var(--white);
}

.taskList li:has( > .completed){
    box-shadow: none;
}   


.taskList li input[type="checkbox"]{
    appearance: none;
    width: min(1.4rem,3.5vw);
    height: min(1.4rem,3.5vw);
    box-shadow: inset 0.1rem 0.1rem 0.1rem var(--lightGreyBorderColor1), inset -0.1rem -0.1rem 0.1rem var(--white);
    border-radius: 6px;

    display: grid;
    place-content: center;
}

.taskList li input[type="checkbox"]::before{
    content: "";
    height: min(0.8rem,2vw);
    width: min(0.8rem,2vw);

    clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
    transform: scale(0);
    transition: transform 110ms ease-in-out;
    background-color: var(--baseColor);
}

.taskList li input[type="checkbox"]:checked::before {
    transform: scale(1);
}


.taskList li img{
    visibility: hidden;
    filter: invert(38%) sepia(29%) saturate(3906%) hue-rotate(228deg) brightness(95%) contrast(108%);
} 

.taskList li:hover img{
    visibility: visible;
    cursor: pointer;
} 

.taskList li img{
    height: 70%;
    margin-left: auto;
}


/* Task Stat styles */
.taskStats{
    margin:10px 0;
}

.taskStats > .smallFontStyles{
    transition: all 180ms ease-in-out;
}